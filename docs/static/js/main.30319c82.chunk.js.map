{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setinputValue","resetInput","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","console","log","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","props","categories","setcategories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAatCC,EAAa,WACfD,EAAc,KAElB,OACI,sBAAME,SAXW,SAACC,GAClBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,IAC3BT,GAAY,SAAAU,GAAI,OAAKR,GAAL,mBAAoBQ,OACpCN,MAOJ,SACI,uBACIO,KAAK,OACLC,MAAOV,EACPW,SAlBc,SAACP,GACvBH,EAAcG,EAAEQ,OAAOF,a,QCYhBG,EAhBK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC9B,OACI,sBAAKC,UAAU,yCAAf,UACI,qBACIC,IAAKF,EACLG,IAAKJ,IAET,4BAAIA,Q,uBCVHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAG1CiB,QAAQC,IAAIN,GAXO,kBAYZA,GAZY,4CAAH,sDC0BLO,EAtBC,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACZtB,mBAAS,CAC/B4B,KAAM,GACNS,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAXAC,qBAAU,WACNnB,EAAQC,GAAUmB,MAAK,SAAAC,GACnBH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAGlB,CAACf,IAIGgB,EDf2BK,CAAarB,GAAjCU,EADgB,EACtBJ,KAAcS,EADQ,EACRA,QACtB,OACI,qCACI,oBAAInB,UAAU,oCAAd,SAAmDI,IAClDe,GAAW,mBAAGnB,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAI,SAAAc,GAAK,OACZ,cAAC,EAAD,eAEQA,GADCA,EAAM7B,aEmBxB8B,EA5BM,SAAAC,GAAS,MAEU9C,mBAAS,IAFnB,mBAEnB+C,EAFmB,KAEPC,EAFO,KAQ1B,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAajD,YAAaiD,IAC1B,6BACKD,EAAWjB,KAAI,SAACR,EAAU2B,GAAX,OACZ,cAAC,EAAD,CAEI3B,SAAUA,GADLA,Y,MCd7B4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.30319c82.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategory }) => {\n    const [inputValue, setinputValue] = useState('')\n\n    const handleInputChange = (e) => {\n        setinputValue(e.target.value);\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategory(cats => [inputValue, ...cats]);\n            resetInput();\n        }\n    }\n    const resetInput = ()=>{\n        setinputValue('');\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategory: PropTypes.func.isRequired\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst GifGridItem = ({ id, title, url }) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img\n                src={url}\n                alt={title}\n            />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nGifGridItem.propTypes = {\n\n}\n\nexport default GifGridItem\n","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Dj9cQYvrYTan4qYQx80U70fQJWkKmduH`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n    console.log(gifs);\n    return gifs;\n}","import PropTypes from 'prop-types'\nimport GifGridItem from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n    const { data: images, loading } = useFetchGifs(category);\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map(image => (\n                        <GifGridItem\n                            key={image.id}\n                            {...image} />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n    category: PropTypes.string.isRequired\n}\nexport default GifGrid;\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category).then(imgs => {\n            setstate({\n                data: imgs,\n                loading: false\n            });\n        });        \n    }, [category]);\n\n\n\n    return state;\n}\n\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { AddCategory } from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = props => {\n    //const categories = ['DC', 'Marvel'];\n    const [categories, setcategories] = useState([]);\n    // const handleAdd = () => {\n    //     //setcategories([...categories,'Holaaaaaaa']);\n    //     setcategories(cats => [...cats, 'Marvel 2']);\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <hr />\n            <AddCategory setCategory={setcategories} />\n            <ol>\n                {categories.map((category, i) => (\n                    <GifGrid\n                        key={category}\n                        category={category} />\n                ))}\n            </ol>\n        </>\n    )\n}\n\nGifExpertApp.propTypes = {\n\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(  \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}